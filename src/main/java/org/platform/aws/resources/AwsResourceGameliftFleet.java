/*******************************************************************************
 * Copyright 2018
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************/
package org.platform.aws.resources;

/**
 * Generated class
 */
public class AwsResourceGameliftFleet {

    /**
     * The minimum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 0. 
     */
    private String MinSize;

    /**
     * The parameters that are required to launch your game server. Specify these parameters as a string of command-line parameters, such as +sv_port 33435 +start_lobby. 
     */
    private String ServerLaunchParameters;

    /**
     * Information that helps you identify the purpose of this fleet. 
     */
    private String Description;

    /**
     * The unique identifier for the build that you want to use with this fleet. 
     */
    private String BuildId;

    /**
     * The incoming traffic, expressed as IP ranges and port numbers, that is permitted to access the game server. If you don't specify values, no traffic is permitted to your game servers. 
     */
    private String EC2InboundPermissions;

    /**
     * The type of EC2 instances that the fleet uses. EC2 instance types define the CPU, memory, storage, and networking capacity of the fleet's hosts. For more information about the instance types that are supported by GameLift, see the EC2InstanceType parameter in the Amazon GameLift API Reference. 
     */
    private String EC2InstanceType;

    /**
     * The number of EC2 instances that you want in this fleet. 
     */
    private String DesiredEC2Instances;

    /**
     * The maximum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 1. 
     */
    private String MaxSize;

    /**
     * The path to game-session log files that are generated by your game server, with the slashes (\) escaped. After a game session has been terminated, GameLift captures and stores the logs in an S3 bucket. 
     */
    private String LogPaths;

    /**
     * An identifier to associate with this fleet. Fleet names don't need to be unique. 
     */
    private String Name;

    /**
     * The location of your game server that GameLift launches. You must escape the slashes (\) and use the following pattern: C:\\game\\launchpath. For example, if your game server files are in the MyGame folder, the path should be C:\\game\\MyGame\\server.exe. 
     */
    private String ServerLaunchPath;

    /**
     * @return the MinSize
     */
    public String getMinSize() {
        return MinSize;
    }

    /**
     * @param MinSize the MinSize to set
     */
    public void setMinSize(String MinSize) {
	this.MinSize = MinSize;
    }

    /**
     * @return the ServerLaunchParameters
     */
    public String getServerLaunchParameters() {
        return ServerLaunchParameters;
    }

    /**
     * @param ServerLaunchParameters the ServerLaunchParameters to set
     */
    public void setServerLaunchParameters(String ServerLaunchParameters) {
	this.ServerLaunchParameters = ServerLaunchParameters;
    }

    /**
     * @return the Description
     */
    public String getDescription() {
        return Description;
    }

    /**
     * @param Description the Description to set
     */
    public void setDescription(String Description) {
	this.Description = Description;
    }

    /**
     * @return the BuildId
     */
    public String getBuildId() {
        return BuildId;
    }

    /**
     * @param BuildId the BuildId to set
     */
    public void setBuildId(String BuildId) {
	this.BuildId = BuildId;
    }

    /**
     * @return the EC2InboundPermissions
     */
    public String getEC2InboundPermissions() {
        return EC2InboundPermissions;
    }

    /**
     * @param EC2InboundPermissions the EC2InboundPermissions to set
     */
    public void setEC2InboundPermissions(String EC2InboundPermissions) {
	this.EC2InboundPermissions = EC2InboundPermissions;
    }

    /**
     * @return the EC2InstanceType
     */
    public String getEC2InstanceType() {
        return EC2InstanceType;
    }

    /**
     * @param EC2InstanceType the EC2InstanceType to set
     */
    public void setEC2InstanceType(String EC2InstanceType) {
	this.EC2InstanceType = EC2InstanceType;
    }

    /**
     * @return the DesiredEC2Instances
     */
    public String getDesiredEC2Instances() {
        return DesiredEC2Instances;
    }

    /**
     * @param DesiredEC2Instances the DesiredEC2Instances to set
     */
    public void setDesiredEC2Instances(String DesiredEC2Instances) {
	this.DesiredEC2Instances = DesiredEC2Instances;
    }

    /**
     * @return the MaxSize
     */
    public String getMaxSize() {
        return MaxSize;
    }

    /**
     * @param MaxSize the MaxSize to set
     */
    public void setMaxSize(String MaxSize) {
	this.MaxSize = MaxSize;
    }

    /**
     * @return the LogPaths
     */
    public String getLogPaths() {
        return LogPaths;
    }

    /**
     * @param LogPaths the LogPaths to set
     */
    public void setLogPaths(String LogPaths) {
	this.LogPaths = LogPaths;
    }

    /**
     * @return the Name
     */
    public String getName() {
        return Name;
    }

    /**
     * @param Name the Name to set
     */
    public void setName(String Name) {
	this.Name = Name;
    }

    /**
     * @return the ServerLaunchPath
     */
    public String getServerLaunchPath() {
        return ServerLaunchPath;
    }

    /**
     * @param ServerLaunchPath the ServerLaunchPath to set
     */
    public void setServerLaunchPath(String ServerLaunchPath) {
	this.ServerLaunchPath = ServerLaunchPath;
    }


}